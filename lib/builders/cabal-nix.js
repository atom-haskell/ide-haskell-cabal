"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const base_1 = require("./base");
class Builder extends base_1.BuilderBase {
    constructor(opts) {
        super('cabal', opts);
    }
    async build() {
        this.cabalArgs = ['new-build'];
        if (this.opts.target.target) {
            this.cabalArgs.push(this.opts.target.target.target);
        }
        return this.runCabal();
    }
    async test() {
        atom.notifications.addWarning("Command 'test' is not implemented for cabal-nix");
        throw new Error("Command 'test' is not implemented for cabal-nix");
    }
    async bench() {
        atom.notifications.addWarning("Command 'bench' is not implemented for cabal-nix");
        throw new Error("Command 'bench' is not implemented for cabal-nix");
    }
    async clean() {
        atom.notifications.addWarning("Command 'clean' is not implemented for cabal-nix");
        throw new Error("Command 'clean' is not implemented for cabal-nix");
    }
    async deps() {
        atom.notifications.addWarning("Command 'deps' is not implemented for cabal-nix");
        throw new Error("Command 'deps' is not implemented for cabal-nix");
    }
}
exports.Builder = Builder;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FiYWwtbml4LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2J1aWxkZXJzL2NhYmFsLW5peC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlDQUE4QztBQUU5QyxhQUFxQixTQUFRLGtCQUFXO0lBSXRDLFlBQVksSUFBYztRQUN4QixLQUFLLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFBO0lBQ3RCLENBQUM7SUFFTSxLQUFLLENBQUMsS0FBSztRQUNoQixJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsV0FBVyxDQUFDLENBQUE7UUFDOUIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUM1QixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUE7UUFDckQsQ0FBQztRQUNELE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUE7SUFDeEIsQ0FBQztJQUNNLEtBQUssQ0FBQyxJQUFJO1FBQ2YsSUFBSSxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsaURBQWlELENBQUMsQ0FBQTtRQUNoRixNQUFNLElBQUksS0FBSyxDQUFDLGlEQUFpRCxDQUFDLENBQUE7SUFDcEUsQ0FBQztJQUNNLEtBQUssQ0FBQyxLQUFLO1FBQ2hCLElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLGtEQUFrRCxDQUFDLENBQUE7UUFDakYsTUFBTSxJQUFJLEtBQUssQ0FBQyxrREFBa0QsQ0FBQyxDQUFBO0lBQ3JFLENBQUM7SUFDTSxLQUFLLENBQUMsS0FBSztRQUNoQixJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxrREFBa0QsQ0FBQyxDQUFBO1FBQ2pGLE1BQU0sSUFBSSxLQUFLLENBQUMsa0RBQWtELENBQUMsQ0FBQTtJQUNyRSxDQUFDO0lBQ00sS0FBSyxDQUFDLElBQUk7UUFDZixJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxpREFBaUQsQ0FBQyxDQUFBO1FBQ2hGLE1BQU0sSUFBSSxLQUFLLENBQUMsaURBQWlELENBQUMsQ0FBQTtJQUNwRSxDQUFDO0NBQ0Y7QUEvQkQsMEJBK0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ3Rvck9wdHMsIEJ1aWxkZXJCYXNlIH0gZnJvbSAnLi9iYXNlJ1xuXG5leHBvcnQgY2xhc3MgQnVpbGRlciBleHRlbmRzIEJ1aWxkZXJCYXNlIHtcbiAgLy8gVE9ETzpcbiAgLy8gICAqIENvbW1hbmRzIG90aGVyIHRoYW4gJ2J1aWxkJ1xuICAvLyAgICogU3VwcG9ydCBmb3IgYnVpbGREaXJcbiAgY29uc3RydWN0b3Iob3B0czogQ3Rvck9wdHMpIHtcbiAgICBzdXBlcignY2FiYWwnLCBvcHRzKVxuICB9XG5cbiAgcHVibGljIGFzeW5jIGJ1aWxkKCkge1xuICAgIHRoaXMuY2FiYWxBcmdzID0gWyduZXctYnVpbGQnXVxuICAgIGlmICh0aGlzLm9wdHMudGFyZ2V0LnRhcmdldCkge1xuICAgICAgdGhpcy5jYWJhbEFyZ3MucHVzaCh0aGlzLm9wdHMudGFyZ2V0LnRhcmdldC50YXJnZXQpXG4gICAgfVxuICAgIHJldHVybiB0aGlzLnJ1bkNhYmFsKClcbiAgfVxuICBwdWJsaWMgYXN5bmMgdGVzdCgpOiBQcm9taXNlPHsgZXhpdENvZGU6IG51bWJlciwgaGFzRXJyb3I6IGJvb2xlYW4gfT4ge1xuICAgIGF0b20ubm90aWZpY2F0aW9ucy5hZGRXYXJuaW5nKFwiQ29tbWFuZCAndGVzdCcgaXMgbm90IGltcGxlbWVudGVkIGZvciBjYWJhbC1uaXhcIilcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb21tYW5kICd0ZXN0JyBpcyBub3QgaW1wbGVtZW50ZWQgZm9yIGNhYmFsLW5peFwiKVxuICB9XG4gIHB1YmxpYyBhc3luYyBiZW5jaCgpOiBQcm9taXNlPHsgZXhpdENvZGU6IG51bWJlciwgaGFzRXJyb3I6IGJvb2xlYW4gfT4ge1xuICAgIGF0b20ubm90aWZpY2F0aW9ucy5hZGRXYXJuaW5nKFwiQ29tbWFuZCAnYmVuY2gnIGlzIG5vdCBpbXBsZW1lbnRlZCBmb3IgY2FiYWwtbml4XCIpXG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ29tbWFuZCAnYmVuY2gnIGlzIG5vdCBpbXBsZW1lbnRlZCBmb3IgY2FiYWwtbml4XCIpXG4gIH1cbiAgcHVibGljIGFzeW5jIGNsZWFuKCk6IFByb21pc2U8eyBleGl0Q29kZTogbnVtYmVyLCBoYXNFcnJvcjogYm9vbGVhbiB9PiB7XG4gICAgYXRvbS5ub3RpZmljYXRpb25zLmFkZFdhcm5pbmcoXCJDb21tYW5kICdjbGVhbicgaXMgbm90IGltcGxlbWVudGVkIGZvciBjYWJhbC1uaXhcIilcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb21tYW5kICdjbGVhbicgaXMgbm90IGltcGxlbWVudGVkIGZvciBjYWJhbC1uaXhcIilcbiAgfVxuICBwdWJsaWMgYXN5bmMgZGVwcygpOiBQcm9taXNlPHsgZXhpdENvZGU6IG51bWJlciwgaGFzRXJyb3I6IGJvb2xlYW4gfT4ge1xuICAgIGF0b20ubm90aWZpY2F0aW9ucy5hZGRXYXJuaW5nKFwiQ29tbWFuZCAnZGVwcycgaXMgbm90IGltcGxlbWVudGVkIGZvciBjYWJhbC1uaXhcIilcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb21tYW5kICdkZXBzJyBpcyBub3QgaW1wbGVtZW50ZWQgZm9yIGNhYmFsLW5peFwiKVxuICB9XG59XG4iXX0=